library(grid, lib.loc = "C:/Program Files/R/R-4.0.3/library")
library(openxlsx)
library(data.table)
install.packages('parallel')
library(parallel, lib.loc = "C:/Program Files/R/R-4.0.3/library")
```{r}
data(iris)
header(iris)
tail(iris)
Probando el notebook
plot(Sepal.Length~Sepal.Width, iris)
summary(iris)
data(iris)
tail(iris)
plot(Sepal.Length~Sepal.Width, iris)
summary(iris)
plot(Sepal.Length~Sepal.Lenght, iris)
iris
plot(Sepal.Length~Petal.Lenght, col='Species', iris)
iris
plot(Sepal.Length~Petal.Length, col='Species', iris)
plot(Sepal.Length~Petal.Length, col=iris[,'Species'], iris)
plot(Sepal.Length~Petal.Length, col=iris[,'Species'], iris)
knit_with_parameters('~/prueba.Rmd')
reticulate::repl_python()
>>> for i in vect:
...     l=(i-1)/2+3.1416
...     Vect1.append(l)
...     print(Vect1)
print(Vect1)
vect=range(1,10,1)
Vect1[]
vect=range(1,10,1)
for i in vect:
l=(i-1)/2+3.1416
Vect1.append(l)
print(Vect1)
Vect1[]
vect=*range(1,10,1)
for i in vect:
l=(i-1)/2+3.1416
Vect1.append(l)
print(Vect1)
Vect1[2]
Vect1[]
Vect1[]=2
vect=[*range(1,10,1)]
vect
Vect1[]
Vect1=[]
Vect1
Vect1[1]=2
Vect1[]=2
Vect1.append(2)
Vect1
for i in vect:
l=(i-1)/2+3.1416
Vect1.append(l)
print(Vect1)
print(Vect1)
print(l)
Vect1=[]
vect=[*range(1,10,1)]
Vect1.append(2)
for i in vect:
l=i-1/2+3.1416
Vect1.append(l)
print(l)
print(l)
print(l)
print(l)
print(l)
print(l)
i-1/2+3.1416
Vect1=[]
vect=[*range(1,10,1)]
Vect1.append(2)
for i in vect:
.append(i)=i-1/2+3.1416
Vect1=[]
vect=[*range(1,10,1)]
Vect1.append(2)
for i in vect:
Vect1.append(i)=i-1/2+3.1416
Vect1=[]
vect=[*range(1,10,1)]
Vect1.append(2)
for i in vect:
Vect1.append=i-1/2+3.1416
print(Vect1)
print(Vect1)
Vect1=[]
vect=[*range(1,10,1)]
Vect1.append(2)
for i in range(len(vect)):
vect[i]=vect[i-1]/2+3.1416
print(vect)
Vect1=[]
vect=[*range(1,10,1)]
Vect1.append(2)
for i in range(range(2,10,1)):
vect[i]=(vect[i-1]/2)+3.1416
print(vect)
Vect1=[]
vect=[*range(1,10,1)]
Vect1.append(2)
for i in range(range(2,10,1)):
vect[i]=(vect[i-1]/2)+3.1416
print(vect)
vect=[*range(1,10,1)]
Vect1.append(2)
for i in range(2,10,1):
vect[i]=(vect[i-1]/2)+3.1416
print(vect)
vect
Vect1=[]
vect=[*range(1,10,1)]
Vect1.append(2)
for i in range(2,10,1):
vect1[i]=(vect[i-1]/2)+3.1416
vect1
vect1=[]
vect=[*range(1,10,1)]
Vect1.append(2)
for i in range(2,10,1):
vect1[i]=(vect[i-1]/2)+3.1416
print(vect)
print(vect)
print(vect1)
print(vect1)
vect=[*range(1,10,1)]
vect
i=1
vect[i-1]
vect=[*range(2,10,1)]
vect[i-1]
vect
i=2
vect[i-1]
i=1
vect[i-1]
vect1=[]
vect=[*range(2,10,1)]
Vect1.append(2)
for i in range(1,9,1):
vect[i]=(vect[i-1]/2)+3.1416
vect
vect
vect1=[]
vect=[*range(2,10,1)]
Vect1.append(2)
for i in range(1,9,1):
vect[i]=(vect[i-1]/2)+3.1416
print(vect)
print(vect)
vect1=[]
vect=[*range(2,10,1)]
Vect1.append(2)
for i in range(1,9,1):
vect[i]=(vect[i-1]/2)+3.1416
print(vect)
load("~/Estudiantes/Otros_doc/Adriana/biplot_clones.RData")
library(ggplot)
library(ggplot2)
View(New.table)
View(New.table)
View(New.table)
View(New.table)
plot(NMS2~NMS1, New.table)
plot(NMS2~NMS1, New.table, pch=15)
plot(NMS2~NMS1, New.table, pch=15, col='red')
plot(NMS2~NMS1, New.table, pch=16, col='red')
plot(NMS2~NMS1, New.table, pch=16, col='red')
plot(NMS2~NMS1, New.table, pch=16, col='blue')
View(New.table)
text
?text
plot(NMS2~NMS1, New.table, pch=16, col='blue')
text(x=New.table$NMS1, y=New.table$NMS2, New.table$CLON)
plot(NMS2~NMS1, New.table, pch=16, col='blue', cex=0.1)
text(x=New.table$NMS1, y=New.table$NMS2, New.table$CLON)
text(x=New.table$NMS1, y=New.table$NMS2, New.table$CLON, col=blue)
text(x=New.table$NMS1, y=New.table$NMS2, New.table$CLON, col='blue')
View(New.table)
length(Species.score$Species)
Species.score
arrows
for(i in 1:length(Species.score$Species)) {
x1<-Species.score[i,1]
y1<-Species.score[i,2]
arrows(x0=0, x1=x1,yo=0, y1=y1)
}
for(i in 1:length(Species.score$Species)) {
x1<-Species.score[i,1]
y1<-Species.score[i,2]
arrows(x0=0, x1=x1,y0=0, y1=y1)
}
for(i in 1:length(Species.score$Species)) {
x1<-Species.score[i,1]
y1<-Species.score[i,2]
arrows(x0=0,y0=0, x1=x1, y1=y1)
}
y1
x1
Species.score
for(i in 1:length(Species.score$Species)) {
x1<-Species.score[i,2]
y1<-Species.score[i,3]
arrows(x0=0,y0=0, x1=x1, y1=y1)
}
for(i in 1:length(Species.score$Species)) {
x1<-Species.score[i,2]*0.5
y1<-Species.score[i,3]*0.5
arrows(x0=0,y0=0, x1=x1, y1=y1)
}
for(i in 1:length(Species.score$Species)) {
x1<-Species.score[i,2]*1.5
y1<-Species.score[i,3]*1.5
arrows(x0=0,y0=0, x1=x1, y1=y1)
}
plot(NMS2~NMS1, New.table, pch=16, col='blue', cex=0.1)
text(x=New.table$NMS1, y=New.table$NMS2, New.table$CLON, col='blue')
for(i in 1:length(Species.score$Species)) {
x1<-Species.score[i,2]*1.5
y1<-Species.score[i,3]*1.5
arrows(x0=0,y0=0, x1=x1, y1=y1)
}
plot(NMS2~NMS1, New.table, pch=16, col='blue', cex=0.1)
text(x=New.table$NMS1, y=New.table$NMS2, New.table$CLON, col='blue')
for(i in 1:length(Species.score$Species)) {
x1<-Species.score[i,2]*2.5
y1<-Species.score[i,3]*2.5
arrows(x0=0,y0=0, x1=x1, y1=y1)
}
View(Species.score)
plot(NMS2~NMS1, New.table, pch=16, col='blue', cex=0.1)
text(x=New.table$NMS1, y=New.table$NMS2, New.table$CLON, col='blue')
for(i in 1:length(Species.score$Species)) {
x1<-Species.score[i,2]*2.5
y1<-Species.score[i,3]*2.5
arrows(x0=0,y0=0, x1=x1, y1=y1)
}
library(readr)
cuencas <- read_csv("C:/Users/Sergio Vilchez/Desktop/cuencas.csv")
View(cuencas)
View(cuencas)
```{r cars}
```{r cars}
summary(cars)
```
```{r cars}
```{r cars}
tinytex::install_tinytex()
summary(cuencas)
```{r setup, include=FALSE}
iris
summary(iris)
1000*1000
1000*1000/10000
1000*1000/10000 *10000
20*20
1000/400
5*400
save.image("~/prueba_brenes.RData")
save.image("C:/Detect_CBB/pruebaBrenes.RData")
load("C:/Detect_CBB/pruebaBrenes.RData")
summary(cuencas)
#load("C:/Detect_CBB/pruebaBrenes.RData")
summary(cuencas)
2*2
400/4
400/2
library(data.table)
setwd('C:\\Detect_CBB\\Corigan_image\\IMG_Yolo5_15_05_2021\\Broca2000\\labels\\train')
L<-list.files(pattern='txt')
#i=1
LL<-do.call(rbind, lapply(1:length(L), function(i) fread(L[i])))
setwd('C:\\Detect_CBB\\Corigan_image\\IMG_Yolo5_15_05_2021\\Broca2000\\labels\\test')
L<-list.files(pattern='txt')
LL1<-do.call(rbind, lapply(1:length(L), function(i) fread(L[i])))
setwd('C:\\Detect_CBB\\Corigan_image\\IMG_Yolo5_15_05_2021\\Broca2000\\labels\\val')
L<-list.files(pattern='txt')
LL2<-do.call(rbind, lapply(1:length(L), function(i) fread(L[i])))
L.end<-rbind(LL, LL1, LL2)
names(L.end)<-c('Cls','X','Y', 'W', 'H')
Lk<-kmeans(L.end[,4:5]/32,20)
plot(L.end[,4:5]*224, col = Lk$cluster)
points(Lk$centers, col = 'red',pch = 15, cex=3)
Lk<-kmeans(L.end[,4:5]/32,27)
plot(L.end[,4:5]*224, col = Lk$cluster)
Lk$centers
Lk<-kmeans(L.end[,4:5],27)
Lk$centers
Lk$centers*224
Lk$centers*608
Lk$centers*8
Lk$centers*224/8
Lk$centers*224/16
Lk$centers*224/32
plot(L.end[,4:5]/8, col = Lk$cluster)
plot(L.end[,4:5]/32, col = Lk$cluster)
plot(L.end[,4:5]/32*224, col = Lk$cluster)
plot(L.end[,4:5]/8*224, col = Lk$cluster)
plot(L.end[,4:5]/*8, col = Lk$cluster)
plot(L.end[,4:5]/*16, col = Lk$cluster)
plot(L.end[,4:5]*16, col = Lk$cluster)
plot(L.end[,4:5]*8, col = Lk$cluster)
plot(L.end[,4:5]*16, col = Lk$cluster)
plot(L.end[,4:5]*32, col = Lk$cluster)
plot(L.end[,4:5]*16, col = Lk$cluster)
plot(L.end[,4:5]*32, col = Lk$cluster)
library(EBImage)
setwd('C:\\yolov5\\data\\Broca2000\\images\\train')
L<-list.files(pattern='JPG')
img = readImage(L[1])
plot(img)
xy<-expand.grid(x=seq(1,222,1),y=seq(1,222,1))
points(xy)
222/8
img = readImage('DD21A78.JPG')
plot(img)
xy<-expand.grid(x=seq(1,222,1),y=seq(1,222,1))
222/8
points(xy)
img = readImage(L[1])
points(xy)
xy<-expand.grid(x=seq(1,222,1),y=seq(1,222,1))
img = readImage(L[1])
plot(img)
points(xy)
img = readImage(L[10])
#img = readImage('DD21A78.JPG')
plot(img)
points(xy)
img = readImage(L[500])
plot(img)
points(xy)
222/12
img = readImage(L[1])
plot(img)
points(xy)
222/8
img = readImage('DD21A78.JPG')
plot(img)
points(xy)
img = readImage(L[1000])
plot(img)
points(xy)
img = readImage(L[1001])
#img = readImage('DD21A78.JPG')
plot(img)
points(xy)
18*2
18*3
18*2
18*5
27*2
27*3
27*4
plot(L.end[,4:5], col = Lk$cluster)
plot(L.end[,4:5]*222, col = Lk$cluster)
27*4
